(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{181:function(n,s,e){"use strict";e.r(s);var t=e(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx","aria-hidden":"true"}},[n._v("#")]),n._v(" nginx")]),n._v(" "),e("p",[n._v("云主机重装了一下系统后，再登录本机会有之前服务器的信息，将之删掉即可\n错误信息中有：Add correct host key in /Users/dashu/.ssh/known_hosts to get rid of this message.\n在/Users/dashu/.ssh/known_hosts 该文件下删除重装主机的信息，重新登录即可")]),n._v(" "),e("p",[n._v("cd /etc/nginx/conf.d")]),n._v(" "),e("p",[n._v("把公钥放到 ssh 文件下就不用输密码了")]),n._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 获取本机的公钥\ncd ~\ncd .ssh/\nls\n# 公钥\ncat id_rsa.pub\n\n# 把公钥放在服务器上\ncd ~\ncd .ssh/\nll\nvi authorized_keys\n")])])]),e("p",[n._v("更改 nginx 配置\n在 nginx 目录下创建一个文件夹，放前端打包后的代码\n然后在 nginx/conf.d 目录下创建对应文件名的配置文件")]),n._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("cd /etc/nginx/conf.d\ncat tsxy.conf\n\nserver {\n    listen  80;\n    server_name tsxy.loan.test.shufanfinance.com;\n\n       location /  {\n            root  /usr/share/nginx/tsxy/;\n            try_files $uri $uri/ @routerSso;\n            index   index.html index.htm;\n        }\n\n        location @routerSso {\n            rewrite ^.*$  / last;\n        }\n\n\n    location /gateway {\n        proxy_pass  http://192.168.5.89:8190/;\n        proxy_set_header  Host     $host;\n        proxy_set_header  X-Real-IP  $remote_addr;\n        proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;\n        proxy_read_timeout 3600s;\n        client_max_body_size    1000m;\n\n    }\n}\n\ncp tsxy.conf workflow.conf\n# 更改配置文件之后要重启nginx服务\n# 然后上传文件就可以了\nsshpass -p 'hengtian' ssh root@192.168.5.157 \"cd /usr/share/nginx/birpt/; rm -rf *\"\nsshpass -p hengtian scp -r build/* root@192.168.5.157:/usr/share/nginx/birpt/.\n")])])]),e("p",[n._v("shell 基本操作")]),n._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 登陆\nssh root@192.168.203.9\nroot：指用户名\n192.168.203.9：服务器IP\n# 打开文件\ncd ~\ncd ..\ncd ../myFile\ncd [foldername]\n# 创建文件\nmkdir [foldername]\n# 删除文件夹\nrm -rf [foldername]\n# 查看\ncat [filename]\n# 查看文件所在目录\npwd\n# 编辑\nvi [filename]\nvim [filename]\n# 在文件中开始编辑(插入)\ni\n# 结束编辑状态\nesc\n# 强制保存退出\n!wq\n# 退出(!强制)\nesc + 冒号 + q + !\n# 拷贝 cp [srcname] [targetname]\ncp tsxy.conf workflow.conf\n# 列出文件\nls\nll\nll -li\n# 登出\nexit\n# 重启\nnginx -s reload\n")])])]),e("h1",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础","aria-hidden":"true"}},[n._v("#")]),n._v(" 基础")]),n._v(" "),e("h1",{attrs:{id:"场景实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景实战","aria-hidden":"true"}},[n._v("#")]),n._v(" 场景实战")]),n._v(" "),e("h1",{attrs:{id:"深度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深度","aria-hidden":"true"}},[n._v("#")]),n._v(" 深度")]),n._v(" "),e("h1",{attrs:{id:"架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#架构","aria-hidden":"true"}},[n._v("#")]),n._v(" 架构")]),n._v(" "),e("h1",{attrs:{id:"新特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新特性","aria-hidden":"true"}},[n._v("#")]),n._v(" 新特性")]),n._v(" "),e("h1",{attrs:{id:"node-项目上线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-项目上线","aria-hidden":"true"}},[n._v("#")]),n._v(" node 项目上线")]),n._v(" "),e("p",[n._v("前期准备\n域名：\n服务器：带外网 IP 的一台电脑，把项目部署上去，启动，监听 80 端口，根据转发的机制，把这些代码转发到 nodejs 后台的服务中\n域名备案")]),n._v(" "),e("p",[n._v("配置服务器应用环境\n安装配置数据库\n项目远程部署发布与更新")]),n._v(" "),e("p",[n._v("光标回到行首：ctrl + a\n光标回到行尾：ctrl + e")]),n._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('# 登录\nssh root@外网地址\n\n# 查看linux系统的盘\nfdisk -l\n\n# 清空面板\ncommand + r\n\n# 查看硬盘使用情况\ndf -h\n\n# 退出\nlogout\n\n# 如果安装了zsh就会有.zshrc这个配置文件，在这个文件中可以加上一些软链接的命令。执行source .zshrc，配置就会生效\n\nalias ssh_root="ssh root@外网地址"\n\n# 创建权限更低的用户，root会误操作不可恢复\nadduser lyr\n# passwd 用户名，给用户设置密码\n# 给用户赋权, 输入命令在sudo的情况下可以操作命令\ngpasswd -a lyr sudo # 没有办法执行该命令\nsudo visudo # 更改配置文件\n# 在user那一项, 把root的权限同样复制一份给lyr\nroot ALL=(ALL:ALL) ALL\n# 重启ssh功能\nservice ssh restart\n\n# 通过ssh实现无密码的登录,在根目录下创建打开.ssh文件夹，里面有配置文件，如果没有该文件夹就mkdir .ssh, 重新创建\npwd\nll -a\ncd .ssh\n未完\n\n# 修改服务器默认登录端口(重启生效： sudo service ssh restart)\nsudo vi /etc/ssh/sshd_config\nProt 39999\nUseDNS no\nAllowUsers lyr\nPermitRootLogin no # 不允许root登录\n\n登录也要换\nssh -p 39999 lyr@XXX # 默认端口是22\n\n# 配置iptables （防火墙） 和 Fail2Ban\n未完\n\n# 安装node环境\n系统更新\nsudo apt-get update\n安装包文件\nsudo apt-get install vim open ssl build-essential libssl-dev wget curl git\n安装nvm, 用wget安装\nwget 去github nvm 仓库找链接\n安装node\nnvm install v8.12.0\nnvm use v6.9.5\nnvm alias default v6.9.5 # 系统的默认node版本为6.9.5\nnode -v\nnpm --registry=https://registry.npm.taobao.org install -g npm # npm用淘宝镜像\nnpm --registry=https://registry.npm.taobao.org install -g cnpm # npm用淘宝镜像\n# echo fs.inotify.max_user_watches=524288\nnpm i pm2 webpack -g\n\n# 让服务稳定的运行 pm2\n在终端中启动服务，该服务只限于该终端的生命周期，\npm2 list\npm2 run app.js\npm2 logs # 当前实时日志\npm2 代码的自动更新\n')])])]),e("p",[n._v("linux 常用命令\n在 Fedora 上用 yum 安装\n在 Ubuntu 这类 Debian 体系的系统上，可以用 apt-get 安装")]),n._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 查看软件安装的所有路径(地址)\nwhereis node # node: /root/.nvm/versions/node/v12.7.0/bin/node\nwhereis git # git: /usr/bin/git /usr/share/man/man1/git.1.gz\nwhereis nginx # nginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man3/nginx.3pm.gz /usr/share/man/man8/nginx.8.gz\n\n# 已经安装的但是不包含在资源库中的rpm包\nyum list # 列出资源库中所有可以安装或更新的rpm包\nyum list installed #\nyum list perl # 列出名为perl  的包\nyum list perl* # 列出perl 开头的包\nyum list updates # 列出资源库中所有可以更新的rpm包\nyum info # 列出资源库中所有可以安装或更新的rpm包的信息\nyum info perl # 列出perl 包信息\nyum info perl* # 列出perl 开头的所有包的信息\nyum info updates # 列出资源库中所有可以更新的rpm包的信息\nyum info installed # 列出已经安装的所有的rpm包的信息\nyum info extras # 列出已经安装的但是不包含在资源库中的rpm包的信息\n\n# 在github官网上找下载的链接 https://github.com/nvm-sh/nvm/blob/master/README.md\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\nsource ~/.bashrc\n# 可查看node所有版本\nnvm ls-remote\n# 安装最新稳定版的nodejs\nnvm install stable\nnvm use node\nnvm run node --version\n# 安装pm2\nnpm install -g pm2\n# 安装git\nyum install git-core\n# 安装nginx\nyum install nginx\n\n# 查看公钥\n# 看机器有没有配置过公钥\npwd # 查看当前位置\nls -a # 查看以点为前缀的文件\ncd .ssh # 里面的id_rsa.pub 就是公钥，如果没有这些文件说明没有，就要生产私钥和公钥\nssh-keygen -t rsa -b 4096 -C \"liyueru.com.cn\" # liyueru.com.cn邮箱名字\ncat id_rsa.pub\n\n# 让node项目稳定跑起来\npm2 start app.js # node app.js\n\n# nginx 开机自动重启\n# nginx 代理80端口的请求，分发给别的地址\n# nginx的配置文件命名，一般会起程 对应的域名+要分发的端口\ncd /etc/nginx/conf.d\nvi liyueru.com.cn_8080.conf # 创建文件\n# 内容如下： 将域名liyueru.com.cn指向服务器本地的8080端口\nupstream blog {\n\tserver 127.0.0.1:8080;\n}\n\nserver {\n\tlisten 80;\n\t# server_name 111.231.145.233; # 服务器的IP地址，不要端口\n\tserver_name liyueru.com.cn; # 错误：server_name http://xxx.com;正确：server_name xxx.com;\n\n\tlocation / {\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forward-For $proxy_add_x_forwarded_for;\n\t\tproxy_set_header Host $http_host;\n\t\tproxy_set_header X-Nginx-Proxy true;\n\t\tproxy_pass http://127.0.0.1:8080;\n\t\tproxy_redirect off;\n\t}\n}\n# 内容结束，检查是否正确\nnginx -t # 检测配置文件有没有问题\nnginx # 启动\nnginx  -s  stop # 关闭\nnginx -s reload # 重启\n# 前端和后端整合的配置\nserver {\n    listen  80;\n    server_name liyueru.com.cn;\n\n    location /  {\n        root  /usr/share/nginx/liyueru.com.cn-8080/;\n        try_files $uri $uri/ @routerSso;\n        index   index.html index.htm;\n    }\n\n    location @routerSso {\n        rewrite ^.*$  / last;\n    }\n\n    location /gateway {\n        proxy_pass  http://192.168.5.89:8190/;\n        proxy_set_header Host     $host;\n        proxy_set_header X-Real-IP  $remote_addr;\n        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;\n        proxy_read_timeout 3600s;\n        client_max_body_size    1000m;\n    }\n}\n\n# 服务器重启之后 重启nginx; nginx: [error] open() \"/run/nginx.pid\" failed (2: No such file or directory)\n因为强制终止nginx之后，不能直接用重启命令，先执行nginx命令之后才\n\n# 安装mysql https://www.cnblogs.com/shalldou/p/10767043.html   https://www.jianshu.com/p/455b93c451fd\n# 查看mysql可允许登录的用户名和主机\nselect user,host from user;\n# 删除mysql用户和主机（将上面的查询的到的用户名和主机写入即可）\nDROP USER 'username'@'host';\n# 添加用户和主机权限(host为%代表所有的都可以)\ngrant all on *.* to 'username'@'host' identified by 'password' with grant option;\ngrant all on *.* to 'root'@'%' identified by '123456' with grant option;\n# 重新加载权限\nflush privileges\n")])])])])}],!1,null,null,null);r.options.__file="nginx.md";s.default=r.exports}}]);